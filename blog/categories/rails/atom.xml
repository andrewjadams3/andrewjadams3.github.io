<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | Andrew Adams]]></title>
  <link href="http://andrewada.ms/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://andrewada.ms/"/>
  <updated>2014-08-07T22:17:11-05:00</updated>
  <id>http://andrewada.ms/</id>
  <author>
    <name><![CDATA[Andrew Adams]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Comparing frameworks]]></title>
    <link href="http://andrewada.ms/blog/2014/comparing-frameworks/"/>
    <updated>2014-04-14T23:33:00-05:00</updated>
    <id>http://andrewada.ms/blog/2014/comparing-frameworks</id>
    <content type="html"><![CDATA[<p>As I&rsquo;ve been working my way through <a title="Rails Tutorial" href="http://ruby.railstutorial.org/" target="_blank">Michael Hartl&rsquo;s Rails Tutorial</a>, I&rsquo;ve become increasingly aware of just how beneficial taking <a title="CS 253 Web Development" href="https://www.udacity.com/course/cs253" target="_blank">Steve Huffman&rsquo;s web development course</a> back in January really was. While I think the Rails tutorial is great, a lot copying and pasting code is required, which is followed only by a brief overview of what it does. Not to mention, much of the code is heavily abstracted in order to save time.</p>

<!-- more -->


<p>I now understand why Steve took the approach of teaching web development on a low-level framework: by getting your hands dirty and coding many of the functions that are already built into Rails and other frameworks, you gain a deeper understanding of the intricate connections within a dynamic website. While I am still learning, I find it much easier to understand the parallels between what the tutorial is showing me, and what I have already accomplished.</p>

<p>That being said, I am truly enjoying the comparative simplicity of Rails! After Steve repeatedly warned against high-level frameworks, I was a little wary to make a switch. However, <a title="Does Rails and Django abstract away too much for beginners?" href="http://qr.ae/vlN3S" target="_blank">this post on Quora</a> convinced me otherwise. <a id="__w2_eLPo9ze_link" href="http://www.quora.com/Nupul-Kukreja">Nupul Kukreja</a> provides the analogy of building a car:
<blockquote><p>You want something that has already put the major parts of the car together so that you can focus on designing the car itself and not worry about putting the engine, steering wheel, seats etc., all together.</p></blockquote>
Focusing on design aspects will certainly be one of my next big challenges, but I can already see Rails opening up many opportunities to experiment and learn.</p>
]]></content>
  </entry>
  
</feed>
